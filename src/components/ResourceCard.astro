---
interface Props {
  title: string;
  description: string;
  link: string;
  tags?: string[];
  image?: string;
  external?: boolean;
}

const { 
  title, 
  description, 
  link,  
  tags = [], 
  image = "https://images.pexels.com/photos/3894378/pexels-photo-3894378.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2",
  external = false
} = Astro.props;
---

<div class="bg-white rounded-xl overflow-hidden shadow-md hover:shadow-lg transition-all duration-300 flex flex-col h-full animate-on-scroll">
  {image && (
    <div class="h-40 overflow-hidden">
      <img 
        src={image} 
        alt={title}
        class="w-full h-full object-cover object-center transition-transform duration-300 hover:scale-105"
      />
    </div>
  )}
  
  <div class="p-6 flex-grow">
    <h3 class="text-xl font-semibold mb-2 text-neutral-800">{title}</h3>
    <p class="text-neutral-600 mb-4">{description}</p>
    
    {tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-4">
        {tags.map(tag => (
          <span class="px-2 py-1 bg-primary-100 text-primary-800 text-xs rounded-full">{tag}</span>
        ))}
      </div>
    )}
  </div>
  
  <div class="px-6 pb-6">
    <a 
      href={link}
      target={external ? "_blank" : undefined}
      rel={external ? "noopener noreferrer" : undefined}
      class="inline-flex items-center justify-center w-full px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg font-medium transition-colors shadow-sm"
    >
      {external ? "Visit Resource" : "Learn More"}
      {external && (
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
        </svg>
      )}
    </a>
  </div>
</div>